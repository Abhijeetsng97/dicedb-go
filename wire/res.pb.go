// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.21.12
// source: protos/res.proto

package wire

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Status int32

const (
	Status_OK  Status = 0
	Status_ERR Status = 1
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "OK",
		1: "ERR",
	}
	Status_value = map[string]int32{
		"OK":  0,
		"ERR": 1,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_res_proto_enumTypes[0].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_protos_res_proto_enumTypes[0]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_protos_res_proto_rawDescGZIP(), []int{0}
}

type Result struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Status  Status                 `protobuf:"varint,1,opt,name=status,proto3,enum=wire.Status" json:"status,omitempty"`
	Message string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Attrs   *structpb.Struct       `protobuf:"bytes,3,opt,name=attrs,proto3" json:"attrs,omitempty"`
	// Types that are valid to be assigned to Response:
	//
	//	*Result_TYPERes
	//	*Result_PINGRes
	//	*Result_ECHORes
	//	*Result_HANDSHAKERes
	//	*Result_EXISTSRes
	//	*Result_GETRes
	//	*Result_SETRes
	//	*Result_DELRes
	//	*Result_KEYSRes
	//	*Result_GETDELRes
	//	*Result_GETEXRes
	//	*Result_GETSETRes
	//	*Result_INCRRes
	//	*Result_DECRRes
	//	*Result_INCRBYRes
	//	*Result_DECRBYRes
	//	*Result_FLUSHDBRes
	//	*Result_EXPIRERes
	//	*Result_EXPIREATRes
	//	*Result_EXPIRETIMERes
	//	*Result_TTLRes
	//	*Result_GETWATCHRes
	//	*Result_UNWATCHRes
	//	*Result_HGETRes
	//	*Result_HSETRes
	//	*Result_HGETALLRes
	//	*Result_HGETWATCHRes
	//	*Result_HGETALLWATCHRes
	//	*Result_ZADDRes
	//	*Result_ZCOUNTRes
	//	*Result_ZRANGERes
	Response      isResult_Response `protobuf_oneof:"response"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Result) Reset() {
	*x = Result{}
	mi := &file_protos_res_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_protos_res_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_protos_res_proto_rawDescGZIP(), []int{0}
}

func (x *Result) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_OK
}

func (x *Result) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Result) GetAttrs() *structpb.Struct {
	if x != nil {
		return x.Attrs
	}
	return nil
}

func (x *Result) GetResponse() isResult_Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *Result) GetTYPERes() *TYPERes {
	if x != nil {
		if x, ok := x.Response.(*Result_TYPERes); ok {
			return x.TYPERes
		}
	}
	return nil
}

func (x *Result) GetPINGRes() *PINGRes {
	if x != nil {
		if x, ok := x.Response.(*Result_PINGRes); ok {
			return x.PINGRes
		}
	}
	return nil
}

func (x *Result) GetECHORes() *ECHORes {
	if x != nil {
		if x, ok := x.Response.(*Result_ECHORes); ok {
			return x.ECHORes
		}
	}
	return nil
}

func (x *Result) GetHANDSHAKERes() *HANDSHAKERes {
	if x != nil {
		if x, ok := x.Response.(*Result_HANDSHAKERes); ok {
			return x.HANDSHAKERes
		}
	}
	return nil
}

func (x *Result) GetEXISTSRes() *EXISTSRes {
	if x != nil {
		if x, ok := x.Response.(*Result_EXISTSRes); ok {
			return x.EXISTSRes
		}
	}
	return nil
}

func (x *Result) GetGETRes() *GETRes {
	if x != nil {
		if x, ok := x.Response.(*Result_GETRes); ok {
			return x.GETRes
		}
	}
	return nil
}

func (x *Result) GetSETRes() *SETRes {
	if x != nil {
		if x, ok := x.Response.(*Result_SETRes); ok {
			return x.SETRes
		}
	}
	return nil
}

func (x *Result) GetDELRes() *DELRes {
	if x != nil {
		if x, ok := x.Response.(*Result_DELRes); ok {
			return x.DELRes
		}
	}
	return nil
}

func (x *Result) GetKEYSRes() *KEYSRes {
	if x != nil {
		if x, ok := x.Response.(*Result_KEYSRes); ok {
			return x.KEYSRes
		}
	}
	return nil
}

func (x *Result) GetGETDELRes() *GETDELRes {
	if x != nil {
		if x, ok := x.Response.(*Result_GETDELRes); ok {
			return x.GETDELRes
		}
	}
	return nil
}

func (x *Result) GetGETEXRes() *GETEXRes {
	if x != nil {
		if x, ok := x.Response.(*Result_GETEXRes); ok {
			return x.GETEXRes
		}
	}
	return nil
}

func (x *Result) GetGETSETRes() *GETSETRes {
	if x != nil {
		if x, ok := x.Response.(*Result_GETSETRes); ok {
			return x.GETSETRes
		}
	}
	return nil
}

func (x *Result) GetINCRRes() *INCRRes {
	if x != nil {
		if x, ok := x.Response.(*Result_INCRRes); ok {
			return x.INCRRes
		}
	}
	return nil
}

func (x *Result) GetDECRRes() *DECRRes {
	if x != nil {
		if x, ok := x.Response.(*Result_DECRRes); ok {
			return x.DECRRes
		}
	}
	return nil
}

func (x *Result) GetINCRBYRes() *INCRBYRes {
	if x != nil {
		if x, ok := x.Response.(*Result_INCRBYRes); ok {
			return x.INCRBYRes
		}
	}
	return nil
}

func (x *Result) GetDECRBYRes() *DECRBYRes {
	if x != nil {
		if x, ok := x.Response.(*Result_DECRBYRes); ok {
			return x.DECRBYRes
		}
	}
	return nil
}

func (x *Result) GetFLUSHDBRes() *FLUSHDBRes {
	if x != nil {
		if x, ok := x.Response.(*Result_FLUSHDBRes); ok {
			return x.FLUSHDBRes
		}
	}
	return nil
}

func (x *Result) GetEXPIRERes() *EXPIRERes {
	if x != nil {
		if x, ok := x.Response.(*Result_EXPIRERes); ok {
			return x.EXPIRERes
		}
	}
	return nil
}

func (x *Result) GetEXPIREATRes() *EXPIREATRes {
	if x != nil {
		if x, ok := x.Response.(*Result_EXPIREATRes); ok {
			return x.EXPIREATRes
		}
	}
	return nil
}

func (x *Result) GetEXPIRETIMERes() *EXPIRETIMERes {
	if x != nil {
		if x, ok := x.Response.(*Result_EXPIRETIMERes); ok {
			return x.EXPIRETIMERes
		}
	}
	return nil
}

func (x *Result) GetTTLRes() *TTLRes {
	if x != nil {
		if x, ok := x.Response.(*Result_TTLRes); ok {
			return x.TTLRes
		}
	}
	return nil
}

func (x *Result) GetGETWATCHRes() *GETWATCHRes {
	if x != nil {
		if x, ok := x.Response.(*Result_GETWATCHRes); ok {
			return x.GETWATCHRes
		}
	}
	return nil
}

func (x *Result) GetUNWATCHRes() *UNWATCHRes {
	if x != nil {
		if x, ok := x.Response.(*Result_UNWATCHRes); ok {
			return x.UNWATCHRes
		}
	}
	return nil
}

func (x *Result) GetHGETRes() *HGETRes {
	if x != nil {
		if x, ok := x.Response.(*Result_HGETRes); ok {
			return x.HGETRes
		}
	}
	return nil
}

func (x *Result) GetHSETRes() *HSETRes {
	if x != nil {
		if x, ok := x.Response.(*Result_HSETRes); ok {
			return x.HSETRes
		}
	}
	return nil
}

func (x *Result) GetHGETALLRes() *HGETALLRes {
	if x != nil {
		if x, ok := x.Response.(*Result_HGETALLRes); ok {
			return x.HGETALLRes
		}
	}
	return nil
}

func (x *Result) GetHGETWATCHRes() *HGETWATCHRes {
	if x != nil {
		if x, ok := x.Response.(*Result_HGETWATCHRes); ok {
			return x.HGETWATCHRes
		}
	}
	return nil
}

func (x *Result) GetHGETALLWATCHRes() *HGETALLWATCHRes {
	if x != nil {
		if x, ok := x.Response.(*Result_HGETALLWATCHRes); ok {
			return x.HGETALLWATCHRes
		}
	}
	return nil
}

func (x *Result) GetZADDRes() *ZADDRes {
	if x != nil {
		if x, ok := x.Response.(*Result_ZADDRes); ok {
			return x.ZADDRes
		}
	}
	return nil
}

func (x *Result) GetZCOUNTRes() *ZCOUNTRes {
	if x != nil {
		if x, ok := x.Response.(*Result_ZCOUNTRes); ok {
			return x.ZCOUNTRes
		}
	}
	return nil
}

func (x *Result) GetZRANGERes() *ZRANGERes {
	if x != nil {
		if x, ok := x.Response.(*Result_ZRANGERes); ok {
			return x.ZRANGERes
		}
	}
	return nil
}

type isResult_Response interface {
	isResult_Response()
}

type Result_TYPERes struct {
	TYPERes *TYPERes `protobuf:"bytes,4,opt,name=TYPERes,proto3,oneof"`
}

type Result_PINGRes struct {
	PINGRes *PINGRes `protobuf:"bytes,8,opt,name=PINGRes,proto3,oneof"`
}

type Result_ECHORes struct {
	ECHORes *ECHORes `protobuf:"bytes,9,opt,name=ECHORes,proto3,oneof"`
}

type Result_HANDSHAKERes struct {
	HANDSHAKERes *HANDSHAKERes `protobuf:"bytes,10,opt,name=HANDSHAKERes,proto3,oneof"`
}

type Result_EXISTSRes struct {
	EXISTSRes *EXISTSRes `protobuf:"bytes,11,opt,name=EXISTSRes,proto3,oneof"`
}

type Result_GETRes struct {
	GETRes *GETRes `protobuf:"bytes,12,opt,name=GETRes,proto3,oneof"`
}

type Result_SETRes struct {
	SETRes *SETRes `protobuf:"bytes,13,opt,name=SETRes,proto3,oneof"`
}

type Result_DELRes struct {
	DELRes *DELRes `protobuf:"bytes,14,opt,name=DELRes,proto3,oneof"`
}

type Result_KEYSRes struct {
	KEYSRes *KEYSRes `protobuf:"bytes,15,opt,name=KEYSRes,proto3,oneof"`
}

type Result_GETDELRes struct {
	GETDELRes *GETDELRes `protobuf:"bytes,16,opt,name=GETDELRes,proto3,oneof"`
}

type Result_GETEXRes struct {
	GETEXRes *GETEXRes `protobuf:"bytes,17,opt,name=GETEXRes,proto3,oneof"`
}

type Result_GETSETRes struct {
	GETSETRes *GETSETRes `protobuf:"bytes,18,opt,name=GETSETRes,proto3,oneof"`
}

type Result_INCRRes struct {
	INCRRes *INCRRes `protobuf:"bytes,19,opt,name=INCRRes,proto3,oneof"`
}

type Result_DECRRes struct {
	DECRRes *DECRRes `protobuf:"bytes,20,opt,name=DECRRes,proto3,oneof"`
}

type Result_INCRBYRes struct {
	INCRBYRes *INCRBYRes `protobuf:"bytes,21,opt,name=INCRBYRes,proto3,oneof"`
}

type Result_DECRBYRes struct {
	DECRBYRes *DECRBYRes `protobuf:"bytes,22,opt,name=DECRBYRes,proto3,oneof"`
}

type Result_FLUSHDBRes struct {
	FLUSHDBRes *FLUSHDBRes `protobuf:"bytes,23,opt,name=FLUSHDBRes,proto3,oneof"`
}

type Result_EXPIRERes struct {
	EXPIRERes *EXPIRERes `protobuf:"bytes,24,opt,name=EXPIRERes,proto3,oneof"`
}

type Result_EXPIREATRes struct {
	EXPIREATRes *EXPIREATRes `protobuf:"bytes,25,opt,name=EXPIREATRes,proto3,oneof"`
}

type Result_EXPIRETIMERes struct {
	EXPIRETIMERes *EXPIRETIMERes `protobuf:"bytes,26,opt,name=EXPIRETIMERes,proto3,oneof"`
}

type Result_TTLRes struct {
	TTLRes *TTLRes `protobuf:"bytes,27,opt,name=TTLRes,proto3,oneof"`
}

type Result_GETWATCHRes struct {
	GETWATCHRes *GETWATCHRes `protobuf:"bytes,28,opt,name=GETWATCHRes,proto3,oneof"`
}

type Result_UNWATCHRes struct {
	UNWATCHRes *UNWATCHRes `protobuf:"bytes,29,opt,name=UNWATCHRes,proto3,oneof"`
}

type Result_HGETRes struct {
	HGETRes *HGETRes `protobuf:"bytes,30,opt,name=HGETRes,proto3,oneof"`
}

type Result_HSETRes struct {
	HSETRes *HSETRes `protobuf:"bytes,31,opt,name=HSETRes,proto3,oneof"`
}

type Result_HGETALLRes struct {
	HGETALLRes *HGETALLRes `protobuf:"bytes,32,opt,name=HGETALLRes,proto3,oneof"`
}

type Result_HGETWATCHRes struct {
	HGETWATCHRes *HGETWATCHRes `protobuf:"bytes,33,opt,name=HGETWATCHRes,proto3,oneof"`
}

type Result_HGETALLWATCHRes struct {
	HGETALLWATCHRes *HGETALLWATCHRes `protobuf:"bytes,34,opt,name=HGETALLWATCHRes,proto3,oneof"`
}

type Result_ZADDRes struct {
	ZADDRes *ZADDRes `protobuf:"bytes,35,opt,name=ZADDRes,proto3,oneof"`
}

type Result_ZCOUNTRes struct {
	ZCOUNTRes *ZCOUNTRes `protobuf:"bytes,36,opt,name=ZCOUNTRes,proto3,oneof"`
}

type Result_ZRANGERes struct {
	ZRANGERes *ZRANGERes `protobuf:"bytes,37,opt,name=ZRANGERes,proto3,oneof"`
}

func (*Result_TYPERes) isResult_Response() {}

func (*Result_PINGRes) isResult_Response() {}

func (*Result_ECHORes) isResult_Response() {}

func (*Result_HANDSHAKERes) isResult_Response() {}

func (*Result_EXISTSRes) isResult_Response() {}

func (*Result_GETRes) isResult_Response() {}

func (*Result_SETRes) isResult_Response() {}

func (*Result_DELRes) isResult_Response() {}

func (*Result_KEYSRes) isResult_Response() {}

func (*Result_GETDELRes) isResult_Response() {}

func (*Result_GETEXRes) isResult_Response() {}

func (*Result_GETSETRes) isResult_Response() {}

func (*Result_INCRRes) isResult_Response() {}

func (*Result_DECRRes) isResult_Response() {}

func (*Result_INCRBYRes) isResult_Response() {}

func (*Result_DECRBYRes) isResult_Response() {}

func (*Result_FLUSHDBRes) isResult_Response() {}

func (*Result_EXPIRERes) isResult_Response() {}

func (*Result_EXPIREATRes) isResult_Response() {}

func (*Result_EXPIRETIMERes) isResult_Response() {}

func (*Result_TTLRes) isResult_Response() {}

func (*Result_GETWATCHRes) isResult_Response() {}

func (*Result_UNWATCHRes) isResult_Response() {}

func (*Result_HGETRes) isResult_Response() {}

func (*Result_HSETRes) isResult_Response() {}

func (*Result_HGETALLRes) isResult_Response() {}

func (*Result_HGETWATCHRes) isResult_Response() {}

func (*Result_HGETALLWATCHRes) isResult_Response() {}

func (*Result_ZADDRes) isResult_Response() {}

func (*Result_ZCOUNTRes) isResult_Response() {}

func (*Result_ZRANGERes) isResult_Response() {}

type HGETWATCHRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HGETWATCHRes) Reset() {
	*x = HGETWATCHRes{}
	mi := &file_protos_res_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HGETWATCHRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HGETWATCHRes) ProtoMessage() {}

func (x *HGETWATCHRes) ProtoReflect() protoreflect.Message {
	mi := &file_protos_res_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HGETWATCHRes.ProtoReflect.Descriptor instead.
func (*HGETWATCHRes) Descriptor() ([]byte, []int) {
	return file_protos_res_proto_rawDescGZIP(), []int{1}
}

type HGETALLWATCHRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HGETALLWATCHRes) Reset() {
	*x = HGETALLWATCHRes{}
	mi := &file_protos_res_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HGETALLWATCHRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HGETALLWATCHRes) ProtoMessage() {}

func (x *HGETALLWATCHRes) ProtoReflect() protoreflect.Message {
	mi := &file_protos_res_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HGETALLWATCHRes.ProtoReflect.Descriptor instead.
func (*HGETALLWATCHRes) Descriptor() ([]byte, []int) {
	return file_protos_res_proto_rawDescGZIP(), []int{2}
}

type GETWATCHRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GETWATCHRes) Reset() {
	*x = GETWATCHRes{}
	mi := &file_protos_res_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GETWATCHRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GETWATCHRes) ProtoMessage() {}

func (x *GETWATCHRes) ProtoReflect() protoreflect.Message {
	mi := &file_protos_res_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GETWATCHRes.ProtoReflect.Descriptor instead.
func (*GETWATCHRes) Descriptor() ([]byte, []int) {
	return file_protos_res_proto_rawDescGZIP(), []int{3}
}

type UNWATCHRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UNWATCHRes) Reset() {
	*x = UNWATCHRes{}
	mi := &file_protos_res_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UNWATCHRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UNWATCHRes) ProtoMessage() {}

func (x *UNWATCHRes) ProtoReflect() protoreflect.Message {
	mi := &file_protos_res_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UNWATCHRes.ProtoReflect.Descriptor instead.
func (*UNWATCHRes) Descriptor() ([]byte, []int) {
	return file_protos_res_proto_rawDescGZIP(), []int{4}
}

type ZADDRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int64                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ZADDRes) Reset() {
	*x = ZADDRes{}
	mi := &file_protos_res_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ZADDRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZADDRes) ProtoMessage() {}

func (x *ZADDRes) ProtoReflect() protoreflect.Message {
	mi := &file_protos_res_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZADDRes.ProtoReflect.Descriptor instead.
func (*ZADDRes) Descriptor() ([]byte, []int) {
	return file_protos_res_proto_rawDescGZIP(), []int{5}
}

func (x *ZADDRes) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ZCOUNTRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int64                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ZCOUNTRes) Reset() {
	*x = ZCOUNTRes{}
	mi := &file_protos_res_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ZCOUNTRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZCOUNTRes) ProtoMessage() {}

func (x *ZCOUNTRes) ProtoReflect() protoreflect.Message {
	mi := &file_protos_res_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZCOUNTRes.ProtoReflect.Descriptor instead.
func (*ZCOUNTRes) Descriptor() ([]byte, []int) {
	return file_protos_res_proto_rawDescGZIP(), []int{6}
}

func (x *ZCOUNTRes) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type TYPERes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TYPERes) Reset() {
	*x = TYPERes{}
	mi := &file_protos_res_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TYPERes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TYPERes) ProtoMessage() {}

func (x *TYPERes) ProtoReflect() protoreflect.Message {
	mi := &file_protos_res_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TYPERes.ProtoReflect.Descriptor instead.
func (*TYPERes) Descriptor() ([]byte, []int) {
	return file_protos_res_proto_rawDescGZIP(), []int{7}
}

func (x *TYPERes) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type PINGRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PINGRes) Reset() {
	*x = PINGRes{}
	mi := &file_protos_res_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PINGRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PINGRes) ProtoMessage() {}

func (x *PINGRes) ProtoReflect() protoreflect.Message {
	mi := &file_protos_res_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PINGRes.ProtoReflect.Descriptor instead.
func (*PINGRes) Descriptor() ([]byte, []int) {
	return file_protos_res_proto_rawDescGZIP(), []int{8}
}

func (x *PINGRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type HGETRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         string                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HGETRes) Reset() {
	*x = HGETRes{}
	mi := &file_protos_res_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HGETRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HGETRes) ProtoMessage() {}

func (x *HGETRes) ProtoReflect() protoreflect.Message {
	mi := &file_protos_res_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HGETRes.ProtoReflect.Descriptor instead.
func (*HGETRes) Descriptor() ([]byte, []int) {
	return file_protos_res_proto_rawDescGZIP(), []int{9}
}

func (x *HGETRes) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type HSETRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int64                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HSETRes) Reset() {
	*x = HSETRes{}
	mi := &file_protos_res_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HSETRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HSETRes) ProtoMessage() {}

func (x *HSETRes) ProtoReflect() protoreflect.Message {
	mi := &file_protos_res_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HSETRes.ProtoReflect.Descriptor instead.
func (*HSETRes) Descriptor() ([]byte, []int) {
	return file_protos_res_proto_rawDescGZIP(), []int{10}
}

func (x *HSETRes) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type HElement struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HElement) Reset() {
	*x = HElement{}
	mi := &file_protos_res_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HElement) ProtoMessage() {}

func (x *HElement) ProtoReflect() protoreflect.Message {
	mi := &file_protos_res_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HElement.ProtoReflect.Descriptor instead.
func (*HElement) Descriptor() ([]byte, []int) {
	return file_protos_res_proto_rawDescGZIP(), []int{11}
}

func (x *HElement) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *HElement) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type HGETALLRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Elements      []*HElement            `protobuf:"bytes,1,rep,name=elements,proto3" json:"elements,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HGETALLRes) Reset() {
	*x = HGETALLRes{}
	mi := &file_protos_res_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HGETALLRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HGETALLRes) ProtoMessage() {}

func (x *HGETALLRes) ProtoReflect() protoreflect.Message {
	mi := &file_protos_res_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HGETALLRes.ProtoReflect.Descriptor instead.
func (*HGETALLRes) Descriptor() ([]byte, []int) {
	return file_protos_res_proto_rawDescGZIP(), []int{12}
}

func (x *HGETALLRes) GetElements() []*HElement {
	if x != nil {
		return x.Elements
	}
	return nil
}

type TTLRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Seconds       int64                  `protobuf:"varint,1,opt,name=seconds,proto3" json:"seconds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TTLRes) Reset() {
	*x = TTLRes{}
	mi := &file_protos_res_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TTLRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TTLRes) ProtoMessage() {}

func (x *TTLRes) ProtoReflect() protoreflect.Message {
	mi := &file_protos_res_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TTLRes.ProtoReflect.Descriptor instead.
func (*TTLRes) Descriptor() ([]byte, []int) {
	return file_protos_res_proto_rawDescGZIP(), []int{13}
}

func (x *TTLRes) GetSeconds() int64 {
	if x != nil {
		return x.Seconds
	}
	return 0
}

type EXPIRERes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsChanged     bool                   `protobuf:"varint,1,opt,name=is_changed,json=isChanged,proto3" json:"is_changed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EXPIRERes) Reset() {
	*x = EXPIRERes{}
	mi := &file_protos_res_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EXPIRERes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EXPIRERes) ProtoMessage() {}

func (x *EXPIRERes) ProtoReflect() protoreflect.Message {
	mi := &file_protos_res_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EXPIRERes.ProtoReflect.Descriptor instead.
func (*EXPIRERes) Descriptor() ([]byte, []int) {
	return file_protos_res_proto_rawDescGZIP(), []int{14}
}

func (x *EXPIRERes) GetIsChanged() bool {
	if x != nil {
		return x.IsChanged
	}
	return false
}

type EXPIREATRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsChanged     bool                   `protobuf:"varint,1,opt,name=is_changed,json=isChanged,proto3" json:"is_changed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EXPIREATRes) Reset() {
	*x = EXPIREATRes{}
	mi := &file_protos_res_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EXPIREATRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EXPIREATRes) ProtoMessage() {}

func (x *EXPIREATRes) ProtoReflect() protoreflect.Message {
	mi := &file_protos_res_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EXPIREATRes.ProtoReflect.Descriptor instead.
func (*EXPIREATRes) Descriptor() ([]byte, []int) {
	return file_protos_res_proto_rawDescGZIP(), []int{15}
}

func (x *EXPIREATRes) GetIsChanged() bool {
	if x != nil {
		return x.IsChanged
	}
	return false
}

type EXPIRETIMERes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UnixSec       int64                  `protobuf:"varint,1,opt,name=unix_sec,json=unixSec,proto3" json:"unix_sec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EXPIRETIMERes) Reset() {
	*x = EXPIRETIMERes{}
	mi := &file_protos_res_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EXPIRETIMERes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EXPIRETIMERes) ProtoMessage() {}

func (x *EXPIRETIMERes) ProtoReflect() protoreflect.Message {
	mi := &file_protos_res_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EXPIRETIMERes.ProtoReflect.Descriptor instead.
func (*EXPIRETIMERes) Descriptor() ([]byte, []int) {
	return file_protos_res_proto_rawDescGZIP(), []int{16}
}

func (x *EXPIRETIMERes) GetUnixSec() int64 {
	if x != nil {
		return x.UnixSec
	}
	return 0
}

type ECHORes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ECHORes) Reset() {
	*x = ECHORes{}
	mi := &file_protos_res_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ECHORes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ECHORes) ProtoMessage() {}

func (x *ECHORes) ProtoReflect() protoreflect.Message {
	mi := &file_protos_res_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ECHORes.ProtoReflect.Descriptor instead.
func (*ECHORes) Descriptor() ([]byte, []int) {
	return file_protos_res_proto_rawDescGZIP(), []int{17}
}

func (x *ECHORes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type EXISTSRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int64                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EXISTSRes) Reset() {
	*x = EXISTSRes{}
	mi := &file_protos_res_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EXISTSRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EXISTSRes) ProtoMessage() {}

func (x *EXISTSRes) ProtoReflect() protoreflect.Message {
	mi := &file_protos_res_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EXISTSRes.ProtoReflect.Descriptor instead.
func (*EXISTSRes) Descriptor() ([]byte, []int) {
	return file_protos_res_proto_rawDescGZIP(), []int{18}
}

func (x *EXISTSRes) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type HANDSHAKERes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HANDSHAKERes) Reset() {
	*x = HANDSHAKERes{}
	mi := &file_protos_res_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HANDSHAKERes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HANDSHAKERes) ProtoMessage() {}

func (x *HANDSHAKERes) ProtoReflect() protoreflect.Message {
	mi := &file_protos_res_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HANDSHAKERes.ProtoReflect.Descriptor instead.
func (*HANDSHAKERes) Descriptor() ([]byte, []int) {
	return file_protos_res_proto_rawDescGZIP(), []int{19}
}

type GETRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         string                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GETRes) Reset() {
	*x = GETRes{}
	mi := &file_protos_res_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GETRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GETRes) ProtoMessage() {}

func (x *GETRes) ProtoReflect() protoreflect.Message {
	mi := &file_protos_res_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GETRes.ProtoReflect.Descriptor instead.
func (*GETRes) Descriptor() ([]byte, []int) {
	return file_protos_res_proto_rawDescGZIP(), []int{20}
}

func (x *GETRes) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type GETEXRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         string                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GETEXRes) Reset() {
	*x = GETEXRes{}
	mi := &file_protos_res_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GETEXRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GETEXRes) ProtoMessage() {}

func (x *GETEXRes) ProtoReflect() protoreflect.Message {
	mi := &file_protos_res_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GETEXRes.ProtoReflect.Descriptor instead.
func (*GETEXRes) Descriptor() ([]byte, []int) {
	return file_protos_res_proto_rawDescGZIP(), []int{21}
}

func (x *GETEXRes) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type GETSETRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         string                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GETSETRes) Reset() {
	*x = GETSETRes{}
	mi := &file_protos_res_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GETSETRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GETSETRes) ProtoMessage() {}

func (x *GETSETRes) ProtoReflect() protoreflect.Message {
	mi := &file_protos_res_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GETSETRes.ProtoReflect.Descriptor instead.
func (*GETSETRes) Descriptor() ([]byte, []int) {
	return file_protos_res_proto_rawDescGZIP(), []int{22}
}

func (x *GETSETRes) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type GETDELRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         string                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GETDELRes) Reset() {
	*x = GETDELRes{}
	mi := &file_protos_res_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GETDELRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GETDELRes) ProtoMessage() {}

func (x *GETDELRes) ProtoReflect() protoreflect.Message {
	mi := &file_protos_res_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GETDELRes.ProtoReflect.Descriptor instead.
func (*GETDELRes) Descriptor() ([]byte, []int) {
	return file_protos_res_proto_rawDescGZIP(), []int{23}
}

func (x *GETDELRes) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type SETRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SETRes) Reset() {
	*x = SETRes{}
	mi := &file_protos_res_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SETRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SETRes) ProtoMessage() {}

func (x *SETRes) ProtoReflect() protoreflect.Message {
	mi := &file_protos_res_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SETRes.ProtoReflect.Descriptor instead.
func (*SETRes) Descriptor() ([]byte, []int) {
	return file_protos_res_proto_rawDescGZIP(), []int{24}
}

type DELRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int64                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DELRes) Reset() {
	*x = DELRes{}
	mi := &file_protos_res_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DELRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DELRes) ProtoMessage() {}

func (x *DELRes) ProtoReflect() protoreflect.Message {
	mi := &file_protos_res_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DELRes.ProtoReflect.Descriptor instead.
func (*DELRes) Descriptor() ([]byte, []int) {
	return file_protos_res_proto_rawDescGZIP(), []int{25}
}

func (x *DELRes) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type FLUSHDBRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FLUSHDBRes) Reset() {
	*x = FLUSHDBRes{}
	mi := &file_protos_res_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FLUSHDBRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FLUSHDBRes) ProtoMessage() {}

func (x *FLUSHDBRes) ProtoReflect() protoreflect.Message {
	mi := &file_protos_res_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FLUSHDBRes.ProtoReflect.Descriptor instead.
func (*FLUSHDBRes) Descriptor() ([]byte, []int) {
	return file_protos_res_proto_rawDescGZIP(), []int{26}
}

type KEYSRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Keys          []string               `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KEYSRes) Reset() {
	*x = KEYSRes{}
	mi := &file_protos_res_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KEYSRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KEYSRes) ProtoMessage() {}

func (x *KEYSRes) ProtoReflect() protoreflect.Message {
	mi := &file_protos_res_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KEYSRes.ProtoReflect.Descriptor instead.
func (*KEYSRes) Descriptor() ([]byte, []int) {
	return file_protos_res_proto_rawDescGZIP(), []int{27}
}

func (x *KEYSRes) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

type INCRRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         int64                  `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *INCRRes) Reset() {
	*x = INCRRes{}
	mi := &file_protos_res_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *INCRRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*INCRRes) ProtoMessage() {}

func (x *INCRRes) ProtoReflect() protoreflect.Message {
	mi := &file_protos_res_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use INCRRes.ProtoReflect.Descriptor instead.
func (*INCRRes) Descriptor() ([]byte, []int) {
	return file_protos_res_proto_rawDescGZIP(), []int{28}
}

func (x *INCRRes) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type DECRRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         int64                  `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DECRRes) Reset() {
	*x = DECRRes{}
	mi := &file_protos_res_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DECRRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DECRRes) ProtoMessage() {}

func (x *DECRRes) ProtoReflect() protoreflect.Message {
	mi := &file_protos_res_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DECRRes.ProtoReflect.Descriptor instead.
func (*DECRRes) Descriptor() ([]byte, []int) {
	return file_protos_res_proto_rawDescGZIP(), []int{29}
}

func (x *DECRRes) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type INCRBYRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         int64                  `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *INCRBYRes) Reset() {
	*x = INCRBYRes{}
	mi := &file_protos_res_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *INCRBYRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*INCRBYRes) ProtoMessage() {}

func (x *INCRBYRes) ProtoReflect() protoreflect.Message {
	mi := &file_protos_res_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use INCRBYRes.ProtoReflect.Descriptor instead.
func (*INCRBYRes) Descriptor() ([]byte, []int) {
	return file_protos_res_proto_rawDescGZIP(), []int{30}
}

func (x *INCRBYRes) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type DECRBYRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         int64                  `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DECRBYRes) Reset() {
	*x = DECRBYRes{}
	mi := &file_protos_res_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DECRBYRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DECRBYRes) ProtoMessage() {}

func (x *DECRBYRes) ProtoReflect() protoreflect.Message {
	mi := &file_protos_res_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DECRBYRes.ProtoReflect.Descriptor instead.
func (*DECRBYRes) Descriptor() ([]byte, []int) {
	return file_protos_res_proto_rawDescGZIP(), []int{31}
}

func (x *DECRBYRes) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type ZElement struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Score         int64                  `protobuf:"varint,1,opt,name=score,proto3" json:"score,omitempty"`
	Member        string                 `protobuf:"bytes,2,opt,name=member,proto3" json:"member,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ZElement) Reset() {
	*x = ZElement{}
	mi := &file_protos_res_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ZElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZElement) ProtoMessage() {}

func (x *ZElement) ProtoReflect() protoreflect.Message {
	mi := &file_protos_res_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZElement.ProtoReflect.Descriptor instead.
func (*ZElement) Descriptor() ([]byte, []int) {
	return file_protos_res_proto_rawDescGZIP(), []int{32}
}

func (x *ZElement) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *ZElement) GetMember() string {
	if x != nil {
		return x.Member
	}
	return ""
}

type ZRANGERes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Elements      []*ZElement            `protobuf:"bytes,1,rep,name=elements,proto3" json:"elements,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ZRANGERes) Reset() {
	*x = ZRANGERes{}
	mi := &file_protos_res_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ZRANGERes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZRANGERes) ProtoMessage() {}

func (x *ZRANGERes) ProtoReflect() protoreflect.Message {
	mi := &file_protos_res_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZRANGERes.ProtoReflect.Descriptor instead.
func (*ZRANGERes) Descriptor() ([]byte, []int) {
	return file_protos_res_proto_rawDescGZIP(), []int{33}
}

func (x *ZRANGERes) GetElements() []*ZElement {
	if x != nil {
		return x.Elements
	}
	return nil
}

var File_protos_res_proto protoreflect.FileDescriptor

var file_protos_res_proto_rawDesc = string([]byte{
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x72, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x04, 0x77, 0x69, 0x72, 0x65, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xda, 0x0c, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x24, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0c, 0x2e, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x2d, 0x0a, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73,
	0x12, 0x29, 0x0a, 0x07, 0x54, 0x59, 0x50, 0x45, 0x52, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x54, 0x59, 0x50, 0x45, 0x52, 0x65, 0x73,
	0x48, 0x00, 0x52, 0x07, 0x54, 0x59, 0x50, 0x45, 0x52, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x07, 0x50,
	0x49, 0x4e, 0x47, 0x52, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x77,
	0x69, 0x72, 0x65, 0x2e, 0x50, 0x49, 0x4e, 0x47, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x07, 0x50,
	0x49, 0x4e, 0x47, 0x52, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x07, 0x45, 0x43, 0x48, 0x4f, 0x52, 0x65,
	0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x45,
	0x43, 0x48, 0x4f, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x07, 0x45, 0x43, 0x48, 0x4f, 0x52, 0x65,
	0x73, 0x12, 0x38, 0x0a, 0x0c, 0x48, 0x41, 0x4e, 0x44, 0x53, 0x48, 0x41, 0x4b, 0x45, 0x52, 0x65,
	0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x48,
	0x41, 0x4e, 0x44, 0x53, 0x48, 0x41, 0x4b, 0x45, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0c, 0x48,
	0x41, 0x4e, 0x44, 0x53, 0x48, 0x41, 0x4b, 0x45, 0x52, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x09, 0x45,
	0x58, 0x49, 0x53, 0x54, 0x53, 0x52, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x45, 0x58, 0x49, 0x53, 0x54, 0x53, 0x52, 0x65, 0x73, 0x48,
	0x00, 0x52, 0x09, 0x45, 0x58, 0x49, 0x53, 0x54, 0x53, 0x52, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x06,
	0x47, 0x45, 0x54, 0x52, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x77,
	0x69, 0x72, 0x65, 0x2e, 0x47, 0x45, 0x54, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x06, 0x47, 0x45,
	0x54, 0x52, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x06, 0x53, 0x45, 0x54, 0x52, 0x65, 0x73, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x53, 0x45, 0x54, 0x52,
	0x65, 0x73, 0x48, 0x00, 0x52, 0x06, 0x53, 0x45, 0x54, 0x52, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x06,
	0x44, 0x45, 0x4c, 0x52, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x77,
	0x69, 0x72, 0x65, 0x2e, 0x44, 0x45, 0x4c, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x06, 0x44, 0x45,
	0x4c, 0x52, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x07, 0x4b, 0x45, 0x59, 0x53, 0x52, 0x65, 0x73, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x4b, 0x45, 0x59,
	0x53, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x07, 0x4b, 0x45, 0x59, 0x53, 0x52, 0x65, 0x73, 0x12,
	0x2f, 0x0a, 0x09, 0x47, 0x45, 0x54, 0x44, 0x45, 0x4c, 0x52, 0x65, 0x73, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x47, 0x45, 0x54, 0x44, 0x45, 0x4c,
	0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x09, 0x47, 0x45, 0x54, 0x44, 0x45, 0x4c, 0x52, 0x65, 0x73,
	0x12, 0x2c, 0x0a, 0x08, 0x47, 0x45, 0x54, 0x45, 0x58, 0x52, 0x65, 0x73, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x47, 0x45, 0x54, 0x45, 0x58, 0x52,
	0x65, 0x73, 0x48, 0x00, 0x52, 0x08, 0x47, 0x45, 0x54, 0x45, 0x58, 0x52, 0x65, 0x73, 0x12, 0x2f,
	0x0a, 0x09, 0x47, 0x45, 0x54, 0x53, 0x45, 0x54, 0x52, 0x65, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x47, 0x45, 0x54, 0x53, 0x45, 0x54, 0x52,
	0x65, 0x73, 0x48, 0x00, 0x52, 0x09, 0x47, 0x45, 0x54, 0x53, 0x45, 0x54, 0x52, 0x65, 0x73, 0x12,
	0x29, 0x0a, 0x07, 0x49, 0x4e, 0x43, 0x52, 0x52, 0x65, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x49, 0x4e, 0x43, 0x52, 0x52, 0x65, 0x73, 0x48,
	0x00, 0x52, 0x07, 0x49, 0x4e, 0x43, 0x52, 0x52, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x07, 0x44, 0x45,
	0x43, 0x52, 0x52, 0x65, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x77, 0x69,
	0x72, 0x65, 0x2e, 0x44, 0x45, 0x43, 0x52, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x07, 0x44, 0x45,
	0x43, 0x52, 0x52, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x09, 0x49, 0x4e, 0x43, 0x52, 0x42, 0x59, 0x52,
	0x65, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x77, 0x69, 0x72, 0x65, 0x2e,
	0x49, 0x4e, 0x43, 0x52, 0x42, 0x59, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x09, 0x49, 0x4e, 0x43,
	0x52, 0x42, 0x59, 0x52, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x09, 0x44, 0x45, 0x43, 0x52, 0x42, 0x59,
	0x52, 0x65, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x77, 0x69, 0x72, 0x65,
	0x2e, 0x44, 0x45, 0x43, 0x52, 0x42, 0x59, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x09, 0x44, 0x45,
	0x43, 0x52, 0x42, 0x59, 0x52, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x0a, 0x46, 0x4c, 0x55, 0x53, 0x48,
	0x44, 0x42, 0x52, 0x65, 0x73, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x77, 0x69,
	0x72, 0x65, 0x2e, 0x46, 0x4c, 0x55, 0x53, 0x48, 0x44, 0x42, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52,
	0x0a, 0x46, 0x4c, 0x55, 0x53, 0x48, 0x44, 0x42, 0x52, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x09, 0x45,
	0x58, 0x50, 0x49, 0x52, 0x45, 0x52, 0x65, 0x73, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x52, 0x65, 0x73, 0x48,
	0x00, 0x52, 0x09, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x52, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x0b,
	0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x41, 0x54, 0x52, 0x65, 0x73, 0x18, 0x19, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x41,
	0x54, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0b, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x41, 0x54,
	0x52, 0x65, 0x73, 0x12, 0x3b, 0x0a, 0x0d, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x54, 0x49, 0x4d,
	0x45, 0x52, 0x65, 0x73, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x77, 0x69, 0x72,
	0x65, 0x2e, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x54, 0x49, 0x4d, 0x45, 0x52, 0x65, 0x73, 0x48,
	0x00, 0x52, 0x0d, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x54, 0x49, 0x4d, 0x45, 0x52, 0x65, 0x73,
	0x12, 0x26, 0x0a, 0x06, 0x54, 0x54, 0x4c, 0x52, 0x65, 0x73, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x54, 0x54, 0x4c, 0x52, 0x65, 0x73, 0x48, 0x00,
	0x52, 0x06, 0x54, 0x54, 0x4c, 0x52, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x0b, 0x47, 0x45, 0x54, 0x57,
	0x41, 0x54, 0x43, 0x48, 0x52, 0x65, 0x73, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x77, 0x69, 0x72, 0x65, 0x2e, 0x47, 0x45, 0x54, 0x57, 0x41, 0x54, 0x43, 0x48, 0x52, 0x65, 0x73,
	0x48, 0x00, 0x52, 0x0b, 0x47, 0x45, 0x54, 0x57, 0x41, 0x54, 0x43, 0x48, 0x52, 0x65, 0x73, 0x12,
	0x32, 0x0a, 0x0a, 0x55, 0x4e, 0x57, 0x41, 0x54, 0x43, 0x48, 0x52, 0x65, 0x73, 0x18, 0x1d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x55, 0x4e, 0x57, 0x41, 0x54,
	0x43, 0x48, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x55, 0x4e, 0x57, 0x41, 0x54, 0x43, 0x48,
	0x52, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x07, 0x48, 0x47, 0x45, 0x54, 0x52, 0x65, 0x73, 0x18, 0x1e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x48, 0x47, 0x45, 0x54,
	0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x07, 0x48, 0x47, 0x45, 0x54, 0x52, 0x65, 0x73, 0x12, 0x29,
	0x0a, 0x07, 0x48, 0x53, 0x45, 0x54, 0x52, 0x65, 0x73, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x48, 0x53, 0x45, 0x54, 0x52, 0x65, 0x73, 0x48, 0x00,
	0x52, 0x07, 0x48, 0x53, 0x45, 0x54, 0x52, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x0a, 0x48, 0x47, 0x45,
	0x54, 0x41, 0x4c, 0x4c, 0x52, 0x65, 0x73, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x77, 0x69, 0x72, 0x65, 0x2e, 0x48, 0x47, 0x45, 0x54, 0x41, 0x4c, 0x4c, 0x52, 0x65, 0x73, 0x48,
	0x00, 0x52, 0x0a, 0x48, 0x47, 0x45, 0x54, 0x41, 0x4c, 0x4c, 0x52, 0x65, 0x73, 0x12, 0x38, 0x0a,
	0x0c, 0x48, 0x47, 0x45, 0x54, 0x57, 0x41, 0x54, 0x43, 0x48, 0x52, 0x65, 0x73, 0x18, 0x21, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x48, 0x47, 0x45, 0x54, 0x57,
	0x41, 0x54, 0x43, 0x48, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0c, 0x48, 0x47, 0x45, 0x54, 0x57,
	0x41, 0x54, 0x43, 0x48, 0x52, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x0f, 0x48, 0x47, 0x45, 0x54, 0x41,
	0x4c, 0x4c, 0x57, 0x41, 0x54, 0x43, 0x48, 0x52, 0x65, 0x73, 0x18, 0x22, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x48, 0x47, 0x45, 0x54, 0x41, 0x4c, 0x4c, 0x57,
	0x41, 0x54, 0x43, 0x48, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0f, 0x48, 0x47, 0x45, 0x54, 0x41,
	0x4c, 0x4c, 0x57, 0x41, 0x54, 0x43, 0x48, 0x52, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x07, 0x5a, 0x41,
	0x44, 0x44, 0x52, 0x65, 0x73, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x77, 0x69,
	0x72, 0x65, 0x2e, 0x5a, 0x41, 0x44, 0x44, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x07, 0x5a, 0x41,
	0x44, 0x44, 0x52, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x09, 0x5a, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52,
	0x65, 0x73, 0x18, 0x24, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x77, 0x69, 0x72, 0x65, 0x2e,
	0x5a, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x09, 0x5a, 0x43, 0x4f,
	0x55, 0x4e, 0x54, 0x52, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x09, 0x5a, 0x52, 0x41, 0x4e, 0x47, 0x45,
	0x52, 0x65, 0x73, 0x18, 0x25, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x77, 0x69, 0x72, 0x65,
	0x2e, 0x5a, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x09, 0x5a, 0x52,
	0x41, 0x4e, 0x47, 0x45, 0x52, 0x65, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x0e, 0x0a, 0x0c, 0x48, 0x47, 0x45, 0x54, 0x57, 0x41, 0x54, 0x43, 0x48,
	0x52, 0x65, 0x73, 0x22, 0x11, 0x0a, 0x0f, 0x48, 0x47, 0x45, 0x54, 0x41, 0x4c, 0x4c, 0x57, 0x41,
	0x54, 0x43, 0x48, 0x52, 0x65, 0x73, 0x22, 0x0d, 0x0a, 0x0b, 0x47, 0x45, 0x54, 0x57, 0x41, 0x54,
	0x43, 0x48, 0x52, 0x65, 0x73, 0x22, 0x0c, 0x0a, 0x0a, 0x55, 0x4e, 0x57, 0x41, 0x54, 0x43, 0x48,
	0x52, 0x65, 0x73, 0x22, 0x1f, 0x0a, 0x07, 0x5a, 0x41, 0x44, 0x44, 0x52, 0x65, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x21, 0x0a, 0x09, 0x5a, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x65,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x1d, 0x0a, 0x07, 0x54, 0x59, 0x50, 0x45, 0x52,
	0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x23, 0x0a, 0x07, 0x50, 0x49, 0x4e, 0x47, 0x52, 0x65,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x1f, 0x0a, 0x07, 0x48,
	0x47, 0x45, 0x54, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x1f, 0x0a, 0x07,
	0x48, 0x53, 0x45, 0x54, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x32, 0x0a,
	0x08, 0x48, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x38, 0x0a, 0x0a, 0x48, 0x47, 0x45, 0x54, 0x41, 0x4c, 0x4c, 0x52, 0x65, 0x73, 0x12,
	0x2a, 0x0a, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x48, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x22, 0x0a, 0x06, 0x54,
	0x54, 0x4c, 0x52, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22,
	0x2a, 0x0a, 0x09, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x52, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x73, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x69, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x22, 0x2c, 0x0a, 0x0b, 0x45,
	0x58, 0x50, 0x49, 0x52, 0x45, 0x41, 0x54, 0x52, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73,
	0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x69, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x22, 0x2a, 0x0a, 0x0d, 0x45, 0x58, 0x50,
	0x49, 0x52, 0x45, 0x54, 0x49, 0x4d, 0x45, 0x52, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x6e,
	0x69, 0x78, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x75, 0x6e,
	0x69, 0x78, 0x53, 0x65, 0x63, 0x22, 0x23, 0x0a, 0x07, 0x45, 0x43, 0x48, 0x4f, 0x52, 0x65, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x21, 0x0a, 0x09, 0x45, 0x58,
	0x49, 0x53, 0x54, 0x53, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x0e, 0x0a,
	0x0c, 0x48, 0x41, 0x4e, 0x44, 0x53, 0x48, 0x41, 0x4b, 0x45, 0x52, 0x65, 0x73, 0x22, 0x1e, 0x0a,
	0x06, 0x47, 0x45, 0x54, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x20, 0x0a,
	0x08, 0x47, 0x45, 0x54, 0x45, 0x58, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x21, 0x0a, 0x09, 0x47, 0x45, 0x54, 0x53, 0x45, 0x54, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x21, 0x0a, 0x09, 0x47, 0x45, 0x54, 0x44, 0x45, 0x4c, 0x52, 0x65, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x08, 0x0a, 0x06, 0x53, 0x45, 0x54, 0x52, 0x65, 0x73, 0x22,
	0x1e, 0x0a, 0x06, 0x44, 0x45, 0x4c, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x0c, 0x0a, 0x0a, 0x46, 0x4c, 0x55, 0x53, 0x48, 0x44, 0x42, 0x52, 0x65, 0x73, 0x22, 0x1d, 0x0a,
	0x07, 0x4b, 0x45, 0x59, 0x53, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0x1f, 0x0a, 0x07,
	0x49, 0x4e, 0x43, 0x52, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x1f, 0x0a,
	0x07, 0x44, 0x45, 0x43, 0x52, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x21,
	0x0a, 0x09, 0x49, 0x4e, 0x43, 0x52, 0x42, 0x59, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x21, 0x0a, 0x09, 0x44, 0x45, 0x43, 0x52, 0x42, 0x59, 0x52, 0x65, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x38, 0x0a, 0x08, 0x5a, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x37,
	0x0a, 0x09, 0x5a, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x52, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x08, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x77, 0x69, 0x72, 0x65, 0x2e, 0x5a, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2a, 0x19, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x45, 0x52, 0x52,
	0x10, 0x01, 0x42, 0x08, 0x5a, 0x06, 0x2e, 0x2f, 0x77, 0x69, 0x72, 0x65, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_protos_res_proto_rawDescOnce sync.Once
	file_protos_res_proto_rawDescData []byte
)

func file_protos_res_proto_rawDescGZIP() []byte {
	file_protos_res_proto_rawDescOnce.Do(func() {
		file_protos_res_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_protos_res_proto_rawDesc), len(file_protos_res_proto_rawDesc)))
	})
	return file_protos_res_proto_rawDescData
}

var file_protos_res_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_protos_res_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_protos_res_proto_goTypes = []any{
	(Status)(0),             // 0: wire.Status
	(*Result)(nil),          // 1: wire.Result
	(*HGETWATCHRes)(nil),    // 2: wire.HGETWATCHRes
	(*HGETALLWATCHRes)(nil), // 3: wire.HGETALLWATCHRes
	(*GETWATCHRes)(nil),     // 4: wire.GETWATCHRes
	(*UNWATCHRes)(nil),      // 5: wire.UNWATCHRes
	(*ZADDRes)(nil),         // 6: wire.ZADDRes
	(*ZCOUNTRes)(nil),       // 7: wire.ZCOUNTRes
	(*TYPERes)(nil),         // 8: wire.TYPERes
	(*PINGRes)(nil),         // 9: wire.PINGRes
	(*HGETRes)(nil),         // 10: wire.HGETRes
	(*HSETRes)(nil),         // 11: wire.HSETRes
	(*HElement)(nil),        // 12: wire.HElement
	(*HGETALLRes)(nil),      // 13: wire.HGETALLRes
	(*TTLRes)(nil),          // 14: wire.TTLRes
	(*EXPIRERes)(nil),       // 15: wire.EXPIRERes
	(*EXPIREATRes)(nil),     // 16: wire.EXPIREATRes
	(*EXPIRETIMERes)(nil),   // 17: wire.EXPIRETIMERes
	(*ECHORes)(nil),         // 18: wire.ECHORes
	(*EXISTSRes)(nil),       // 19: wire.EXISTSRes
	(*HANDSHAKERes)(nil),    // 20: wire.HANDSHAKERes
	(*GETRes)(nil),          // 21: wire.GETRes
	(*GETEXRes)(nil),        // 22: wire.GETEXRes
	(*GETSETRes)(nil),       // 23: wire.GETSETRes
	(*GETDELRes)(nil),       // 24: wire.GETDELRes
	(*SETRes)(nil),          // 25: wire.SETRes
	(*DELRes)(nil),          // 26: wire.DELRes
	(*FLUSHDBRes)(nil),      // 27: wire.FLUSHDBRes
	(*KEYSRes)(nil),         // 28: wire.KEYSRes
	(*INCRRes)(nil),         // 29: wire.INCRRes
	(*DECRRes)(nil),         // 30: wire.DECRRes
	(*INCRBYRes)(nil),       // 31: wire.INCRBYRes
	(*DECRBYRes)(nil),       // 32: wire.DECRBYRes
	(*ZElement)(nil),        // 33: wire.ZElement
	(*ZRANGERes)(nil),       // 34: wire.ZRANGERes
	(*structpb.Struct)(nil), // 35: google.protobuf.Struct
}
var file_protos_res_proto_depIdxs = []int32{
	0,  // 0: wire.Result.status:type_name -> wire.Status
	35, // 1: wire.Result.attrs:type_name -> google.protobuf.Struct
	8,  // 2: wire.Result.TYPERes:type_name -> wire.TYPERes
	9,  // 3: wire.Result.PINGRes:type_name -> wire.PINGRes
	18, // 4: wire.Result.ECHORes:type_name -> wire.ECHORes
	20, // 5: wire.Result.HANDSHAKERes:type_name -> wire.HANDSHAKERes
	19, // 6: wire.Result.EXISTSRes:type_name -> wire.EXISTSRes
	21, // 7: wire.Result.GETRes:type_name -> wire.GETRes
	25, // 8: wire.Result.SETRes:type_name -> wire.SETRes
	26, // 9: wire.Result.DELRes:type_name -> wire.DELRes
	28, // 10: wire.Result.KEYSRes:type_name -> wire.KEYSRes
	24, // 11: wire.Result.GETDELRes:type_name -> wire.GETDELRes
	22, // 12: wire.Result.GETEXRes:type_name -> wire.GETEXRes
	23, // 13: wire.Result.GETSETRes:type_name -> wire.GETSETRes
	29, // 14: wire.Result.INCRRes:type_name -> wire.INCRRes
	30, // 15: wire.Result.DECRRes:type_name -> wire.DECRRes
	31, // 16: wire.Result.INCRBYRes:type_name -> wire.INCRBYRes
	32, // 17: wire.Result.DECRBYRes:type_name -> wire.DECRBYRes
	27, // 18: wire.Result.FLUSHDBRes:type_name -> wire.FLUSHDBRes
	15, // 19: wire.Result.EXPIRERes:type_name -> wire.EXPIRERes
	16, // 20: wire.Result.EXPIREATRes:type_name -> wire.EXPIREATRes
	17, // 21: wire.Result.EXPIRETIMERes:type_name -> wire.EXPIRETIMERes
	14, // 22: wire.Result.TTLRes:type_name -> wire.TTLRes
	4,  // 23: wire.Result.GETWATCHRes:type_name -> wire.GETWATCHRes
	5,  // 24: wire.Result.UNWATCHRes:type_name -> wire.UNWATCHRes
	10, // 25: wire.Result.HGETRes:type_name -> wire.HGETRes
	11, // 26: wire.Result.HSETRes:type_name -> wire.HSETRes
	13, // 27: wire.Result.HGETALLRes:type_name -> wire.HGETALLRes
	2,  // 28: wire.Result.HGETWATCHRes:type_name -> wire.HGETWATCHRes
	3,  // 29: wire.Result.HGETALLWATCHRes:type_name -> wire.HGETALLWATCHRes
	6,  // 30: wire.Result.ZADDRes:type_name -> wire.ZADDRes
	7,  // 31: wire.Result.ZCOUNTRes:type_name -> wire.ZCOUNTRes
	34, // 32: wire.Result.ZRANGERes:type_name -> wire.ZRANGERes
	12, // 33: wire.HGETALLRes.elements:type_name -> wire.HElement
	33, // 34: wire.ZRANGERes.elements:type_name -> wire.ZElement
	35, // [35:35] is the sub-list for method output_type
	35, // [35:35] is the sub-list for method input_type
	35, // [35:35] is the sub-list for extension type_name
	35, // [35:35] is the sub-list for extension extendee
	0,  // [0:35] is the sub-list for field type_name
}

func init() { file_protos_res_proto_init() }
func file_protos_res_proto_init() {
	if File_protos_res_proto != nil {
		return
	}
	file_protos_res_proto_msgTypes[0].OneofWrappers = []any{
		(*Result_TYPERes)(nil),
		(*Result_PINGRes)(nil),
		(*Result_ECHORes)(nil),
		(*Result_HANDSHAKERes)(nil),
		(*Result_EXISTSRes)(nil),
		(*Result_GETRes)(nil),
		(*Result_SETRes)(nil),
		(*Result_DELRes)(nil),
		(*Result_KEYSRes)(nil),
		(*Result_GETDELRes)(nil),
		(*Result_GETEXRes)(nil),
		(*Result_GETSETRes)(nil),
		(*Result_INCRRes)(nil),
		(*Result_DECRRes)(nil),
		(*Result_INCRBYRes)(nil),
		(*Result_DECRBYRes)(nil),
		(*Result_FLUSHDBRes)(nil),
		(*Result_EXPIRERes)(nil),
		(*Result_EXPIREATRes)(nil),
		(*Result_EXPIRETIMERes)(nil),
		(*Result_TTLRes)(nil),
		(*Result_GETWATCHRes)(nil),
		(*Result_UNWATCHRes)(nil),
		(*Result_HGETRes)(nil),
		(*Result_HSETRes)(nil),
		(*Result_HGETALLRes)(nil),
		(*Result_HGETWATCHRes)(nil),
		(*Result_HGETALLWATCHRes)(nil),
		(*Result_ZADDRes)(nil),
		(*Result_ZCOUNTRes)(nil),
		(*Result_ZRANGERes)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_protos_res_proto_rawDesc), len(file_protos_res_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protos_res_proto_goTypes,
		DependencyIndexes: file_protos_res_proto_depIdxs,
		EnumInfos:         file_protos_res_proto_enumTypes,
		MessageInfos:      file_protos_res_proto_msgTypes,
	}.Build()
	File_protos_res_proto = out.File
	file_protos_res_proto_goTypes = nil
	file_protos_res_proto_depIdxs = nil
}
